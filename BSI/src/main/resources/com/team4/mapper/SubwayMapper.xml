<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- package-name : com.demoweb.mapper, class-name : BoardMapper -->
<mapper namespace="com.team4.mapper.SubwayMapper">

	<insert id="insertSubway" parameterType="List" >
	INSERT INTO subway (sname, line, snumber) 
	VALUES 
	<foreach collection="list" item="item" separator=",">
	(#{ item.sname }, #{ item.line },#{ item.snumber })
	</foreach>
	</insert>

	<insert id="insertCustomer" parameterType="List" >
	INSERT INTO CUSTOMER (snumber, DATE, HOUR, DIVISION, unumber) 
	VALUES 
	<foreach collection="list" item="item" separator=",">
	(#{ item.snumber }, #{ item.date }, #{ item.hour }, #{ item.division }, #{ item.unumber })
	</foreach>
	</insert>
	
	<select id="selectrank" resultType="StationVO">
	select dense_rank() over(order by sum(unumber) desc) as ranking,
		   sname as sname, division, round(sum(unumber)/243,0) as unumber
		   from customer join subway on subway.snumber = customer.snumber
		   GROUP BY customer.snumber, customer.division limit 5;
	</select>
	
	<select id="selectAvg" resultType="StationVO">
	Select round(sum(unumber)/243,0) as unumber
	from customer;
	</select>
	
	<insert id="insertMember" parameterType="MembersVO">
	INSERT INTO member (memberId, passwd, email)
	VALUES (#{ memberId }, #{ passwd }, #{ email } )
	</insert>
	
	<resultMap type="MembersVO" id="memberResult">
		<result property="memberId" column="memberId"/>
		<result property="email" column="email"/>
		<result property="userType" column="usertype"/>
		<result property="regDate" column="regdate"/>
	</resultMap>
	
	<select id="selectMemberIdAndPasswd" parameterType="String" resultMap="memberResult">
	SELECT memberId, email, usertype, regdate 
	FROM member
	WHERE memberId = #{ memberId } AND passwd = #{ passwd }
	</select>
	
	<resultMap type="MembersVO" id="memberlist">
		<result property="memberId" column="memberId"/>
		<result property="email" column="email"/>
		<result property="userType" column="usertype"/>
		<result property="regDate" column="regdate"/>
	</resultMap>
	
	<select id="selectAll" resultMap="memberlist">
	SELECT memberId, email, usertype, regDate
	FROM member
	</select>
	
	<select id="selectMemberId" parameterType="String" resultMap="memberlist">
	SELECT memberId, email, usertype, REGDATE
	FROM MEMBER
	WHERE MEMBERID = #{ memberId }
	</select>
	
	<update id="updateMember" parameterType="MembersVO">
	UPDATE MEMBER
	SET USERTYPE = #{ userType }, EMAIL = #{ email }
	WHERE MEMBERID = #{ memberId }
	</update>
	
	<delete id="deleteMember" parameterType="String">
	DELETE
	FROM member
	WHERE memberId = '${ memberId }'
	</delete>	
	
</mapper>